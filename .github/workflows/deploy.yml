name: Html Fairy Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GAMITEE_BOT_COMMIT_ACCESS_TOKEN }}
      - name: Check Last Commit
        run: |
          name=$(git log -1 --pretty=format:'%an')
          email=$(git log -1 --pretty=format:'%ae')
          subject=$(git log -1 --pretty=format:'%s')

          echo "name = $name"
          echo "email = $email"
          echo "subject = $subject"

          if [[ "$name" == "Joyned CI Bot" ]] && [[ "$email" == "tech@joyned.co" ]] && [[ "$subject" == Release* ]]; then
            echo "Last commit was done by this bot. Exiting to prevent loop."
            echo "skip_ci=1" >> $GITHUB_ENV
          fi
      - name: Check Release Version
        if: ${{ !env.skip_ci }}
        run: |
          version=$(cat package.json | jq .version -r)
          release_exists=1
          while [ $release_exists == 1 ]; do
            echo "Checking if release ${version} exists"
            status_code=$(
              curl -I --location "$GITHUB_API_URL/repos/${{ github.repository }}/releases/tags/$version" \
              --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" | grep "HTTP/2" | cut -d' ' -f 2
            )
            if [ "$status_code" == "404" ]; then
              echo "Release $version does not exist"
              release_exists=0
            elif [ "$status_code" == "200" ]; then
              echo "Release $version exists, incrementing patch"
              npm version patch --no-git-tag-version
              version=$(cat package.json | jq .version -r)
            else
              echo "Got unexpected status code $status_code"
              exit 1
            fi
          done
          echo "RELEASE_VERSION=${version}" >> $GITHUB_ENV
      - name: Install NPM Dependencies
        if: ${{ !env.skip_ci }}
        run: npm install
      - name: Generate Files
        if: ${{ !env.skip_ci }}
        run: npm run build
      - name: Remove comments
        run: |
          cd dist
          for file_name in `find . -name "*.js" -type f`; do
            sed -i '/^\/.*$/d' $file_name
          done
      - name: Commit & Push Files
        if: ${{ !env.skip_ci }}
        run: |
          git config --global user.email "tech@joyned.co"
          git config --global user.name "Joyned CI Bot"
          git add .
          git commit -m "Release: Version ${RELEASE_VERSION}."
          git push origin master
      - name: Create Release
        if: ${{ !env.skip_ci }}
        run: |
          commit_hash=$(git log -1 --pretty=format:'%H')
          echo "commit_hash: $commit_hash"
          payload=$(
            jq -n -c '{tag_name:$version,target_commitish:$commit_hash,name:$version}' \
              --arg version "$RELEASE_VERSION" \
              --arg commit_hash "$commit_hash"
          )
          echo $payload
          curl --request POST "$GITHUB_API_URL/repos/${{ github.repository }}/releases" \
            --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Content-Type: application/json" \
            --data-raw "${payload}"
